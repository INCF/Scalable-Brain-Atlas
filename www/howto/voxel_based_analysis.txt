pipeline:

1. get volume data into matlab, with rgb coding for region
- read nifti format
- read original png/tif files
- convert svg to png

2. for each rgb, create 3d mask (0=background, 1=region).

3. compute isosurface at region border (threshold 0.5)

4. for each patch in isosurface, find the nearest background
voxel, lookup its rgb, and assign it to the patch.
Compute the surface area of the patch and do
area{this rgb}{neighbor rgb} += path area
(use sparse matrix)


===================

Convert svg to png

1. get boundingbox (from config file)
2. get per-slice scaling (from xy_scaling.json)
x0 dx_dp y0 dy_dp where dp is change in point value, the native SVG unit.
3. get bregma (from bregma.json)

generate svg, such that height = 512px, width is automatic
generate png from it.
This is all part of the current pipeline, using the RGB option.
Perhaps matlab can open an URL?